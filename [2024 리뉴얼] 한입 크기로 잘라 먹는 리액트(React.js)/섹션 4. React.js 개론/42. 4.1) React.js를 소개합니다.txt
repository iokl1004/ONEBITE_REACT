42. 4.1) React.js를 소개합니다

.React의 기술적인 특징
1. 컴포넌트를 기반으로 UI를 표현한다.
2. 화면 업데이트 구현이 쉽다.
3. 화면 업데이트가 빠르게 처리된다.

---

1. 컴포넌트를 기반으로 UI를 표현한다.
. 컴포넌트(Component)
- 우리말로 "구성요소" 라는 뜻
- 화면을 구성하는 요소, UI를 구성하는 요소를 뜻 함.
Header.js
Main.js
Footer.js
---

2. 화면 업데이트 구현이 쉽다.
업데이트란? 사용자의 해동(클릭, 드래그)에 따라 웹 페이지가 스스로 모습을 바꿔 상호작용 하는 것.
React는 선언형 프로그래밍 : 과정은 생각하고 목적만 간결히 명시하는 방법
예) 식당가서 음식 주문하는것과 유사함! 토마토 파스타 하나 주세요!

반대의 의미로 명령형 프로그래밍이 있는데 이것은 목적은 이루기 위한 모든 일련의 과정을 설명하는 방식.
마치 진상(?) 손님처럼 주문하는 방식
예) 주방으로 가셔서 면 100g을 꺼내세요, 그리고 뜨거운 물에 9분간 삶으세요 등등....

선언형 프로그래밍 : 목적만 깔끔하게 명시하며, 코드가 간결함
명령형 프로그래밍 : 모든 과정을 하나하나 다 설명하며, 코드가 길고 복잡함.

컴포넌트 안에는 State라는 현재, 컴포넌트의 상태를 저장하는 변수가 있다!
렌더링 : UI 요소를 화면에 그려내는 것을 말함.
예를들어 C컴포넌트의 State 변수의 값이 1이면 1번 UI 렌더링 진행, 2일경우 2번 UI 렌더링 진행

선언형 프로그래밍의 핵심!
업데이트를 위한 복잡한 동작을 직접 정의할 필요 없이 특정 변수의 값을 바꾸는 것 만으로도 화면을 업데이트 시킬 수 있다.

---

3. 화면 업데이트가 빠르게 처리된다.
화면 업데이트를 쉽게 구현할 수 있으면서, 동시에 빠르게도 처리해 줌.
어떻게 이게 가능함....??!

브라우저의 렌더링 과정
HTML → DOM
		↓
		Render Tree → Layout → Painting
		↑
CSS →  CSSOM

돔이란? DOM (Document Object Model) 풀네임은 이러하며, HTML 문서를 일종의 객체모델로 변환한것!
DOM 구성 : 요소들의 위치, 배치, 모양에 관한 모든 정보
CSSOM 구성 : 요소들의 스타일과 관련된 모든 정보
RenderTree : 웹 페이지의 청사진 또는 웹 페이지의 설계도이다!
Layout : 요소의 배치를 잡는 작업
Painting : 요소를 실제로 화면에 그려내는 과정

그렇다면 업데이트는 어떻게 이루어 질까?
JavaScript가 DOM을 수정하면 업데이트가 이루어 지며, DOM이 수정되면 업데이트가 일어난다!
DOM → Render Tree CSSOM 구성 : 요소들의 스타일과 관련된 모든 정보 Layout CSSOM 구성 : 요소들의 스타일과 관련된 모든 정보 Painting

아래의 두개의 과정은 오래 걸리는 작업이다!
Reflow : Layout을 다시 한다.
Repaint : Painting을 다시 한다.

React는 아래의 과정을 자동으로 해준다! (Feat. Virtual DOM)
다양한 업데이트 → 동시에 발생한 업데이트를 모음 → 다 모였을 경우 한번에 수정 → DOM

Virtual DOM 이란?
.DOM을 자바스크립트 객체로 흉내낸 것으로 일종의 복제판이라고 생각하면 된다.
. React는 업데이트가 발생하면 실제 DOM을 수정하기 전에 이 가상의 복제판 DOM에 먼저 반영해본다.
-.연습 스윙 같은 느낌이라고 생각하면 된다!