86. 12.8) 일기 관리 기능 구현하기 1

감정 일기장 프로젝트
"일기" 라는 형태의 데이터를 관리하는 프로그램

home : 일기 리스트 렌더링
diary : 일기 상세 조회
new : 새로운 일기 작성
edit : 기존 일기 수정

App.jsx 수정
pages/Edit.jsx 추가
Diary.jsx 수정

---
App.jsx

import './App.css'
// useNavigate : 페이지를 실제로 이동 시켜주는 네비게이트함수를 반환해줌
import { useReducer } from 'react';
import { Routes, Route, Link, useNavigate } from "react-router-dom";
import Home from './pages/Home';
import Diary from './pages/Diary';
import New from './pages/New';
import Edit from './pages/Edit';
import Notfound from './pages/Notfound';

import Button from './components/Button.jsx';
import Header from './components/Header.jsx';

import { getEmotionImage } from './util/get-emotion-image.js';

// 임시 일기 데이터 객체 모델링
const mockData = [
  {
    id : 1,
    createdDate : new Date().getTime(),
    emotionId : 1,
    content : "1번 일기 내용",
  },
  {
    id : 2,
    createdDate : new Date().getTime(),
    emotionId : 2,
    content : "2번 일기 내용",
  },
  
]

function reducer(state, action) {
  return state;
}

function App() {
  const [data, dispatch] = useReducer(reducer, mockData);

  return (
    <>      
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/new" element={<New />} />
        <Route path="/diary/:id" element={<Diary />} />
        <Route path="/edit/:id" element={<Edit />} />
        <Route path="*" element={<Notfound />} />        
      </Routes>
    </>
  )
}

export default App;

---
pages/Edit.jsx 

import { useParams } from "react-router-dom";

const Edit = () => {
    const params = useParams();
    
    return (
        <div>
            {params.id}번 일기 수정페이지입니다.
        </div>
    )
}

export default Edit;

---
Diary.jsx 수정

// 현재 브라우저에 명시한 파라미터의 값을 가져온다!
// 1. URL Parameter 방식
import { useParams } from "react-router-dom";

const Diary = () => {
    // 1. URL Parameter 방식
    const params = useParams();
    console.log(params);

    // 1. URL Parameter 방식
    return <div>{params.id}번 일기입니다 ~~</div>
}

export default Diary;