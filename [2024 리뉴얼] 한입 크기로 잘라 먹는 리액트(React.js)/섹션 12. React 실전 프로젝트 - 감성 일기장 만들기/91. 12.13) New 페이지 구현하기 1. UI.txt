91. 12.13) New 페이지 구현하기 1. UI

src/pages/New.jsx 수정
src/components/Editor.jsx 추가
src/components/Editor.css 추가
src/components/EmotionItem.jsx 추가
src/components/EmotionItem.css 추가
index.css 수정

---
src/pages/New.jsx

import Header from "../components/Header";
import Button from "../components/Button";
import Editor from "../components/Editor";

const New = () => {
    return (
        <div>
            <Header title = {"새 일기 쓰기"}
            leftChild={<Button text={"<뒤로 가기"} />}
        />
        <Editor />
        </div>
    )
}

export default New;

---
src/components/Editor.jsx

import "./Editor.css";
import EmotionItem from "./EmotionItem";
import Button from "./Button";

const emotionList = [
    {
        emotionId : 1,
        emotionName : "완전 좋음"
    },
    {
        emotionId : 2,
        emotionName : "좋음"
    },
    {
        emotionId : 3,
        emotionName : "그럭저럭"
    },
    {
        emotionId : 4,
        emotionName : "나쁨"
    },
    {
        emotionId : 5,
        emotionName : "끔찍함"
    },
];

const Editor = () => {
    const emotionId = 5;

    return (
        <div className="Editor">
            <section className="date_section">
                <h4>오늘의 날짜</h4>
                <input type="date" />
            </section>
            <section className="emotion_section">
                <h4>오늘의 감정</h4>
                <div className="emotion_list_weapper">
                    {emotionList.map((item) => (
                        <EmotionItem
                            key={item.emotionId} {...item}
                            isSelected={item.emotionId === emotionId} />
                    ))}
                </div>
            </section>
            <section className="content_section">
                <h4>오늘의 일기</h4>
                <textarea placeholder="오늘은 어땠나요?"/>
            </section>
            <section className="button_section">
                <Button text={"취소하기"} />
                <Button text={"작성완료"} type={"POSITIVE"} />
            </section>
        </div>
    ) 
};

export default Editor;

---
src/components/Editor.css

.Editor > section {
    margin-bottom: 40px;
}

.Editor > section > h4 {
    font-size : 22px;
    font-weight: bold;
}

.Editor > section > input, textarea {
    background-color: rgb(236, 236, 236);
    border : none;
    border-radius: 5px;
    font-size: 20px;
    padding: 10px 20px;
}

.Editor > section > textarea {
    padding : 20px;
    width : 100%;

    /* 최소높이 */
    min-height: 200px;

    /* 가로로는 못 늘리게 설정 */
    resize: vertical;

    /* 텍스트 에어리어가 화면의 밖으로 튀어나가지 못하게 설정 */
    box-sizing: border-box;
}

.Editor .emotion_section .emotion_list_weapper {
    display: flex;
    justify-content: space-around;
    gap : 2%;
}

.Editor .button_section {
    display: flex;
    /* 버튼들이 양 옆으로 떨어지게 설정 */
    justify-content: space-between;
}

---
src/components/EmotionItem.jsx

import "./EmotionItem.css";
import { getEmotionImage } from "../util/get-emotion-image";

const EmotionItem = ({ emotionId, emotionName, isSelected }) => {
    return (
        <div className={`EmotionItem ${isSelected ? `EmotionItem_on_${emotionId}` : ""}`}>
            <img className = "emotion_img"
                src={getEmotionImage(emotionId)} />
            <div className="emotion_name"> {emotionName} </div>
        </div>
    );
};

export default EmotionItem;

---
src/components/EmotionItem.css

.EmotionItem {
    background-color: rgb(236, 236, 236);
    padding : 20px;
    border-radius: 5px;
    cursor: pointer;
    text-align: center;
}

.EmotionItem .emotion_img {
    width : 50%;
    margin-bottom: 10px;
}

.EmotionItem_on_1{
    color : white;
    background-color: rgb(100, 201, 100);
}
.EmotionItem_on_2{
    color : white;
    background-color: rgb(157, 215, 114);
}
.EmotionItem_on_3{
    color : white;
    background-color: rgb(253, 206, 23);
}
.EmotionItem_on_4{
    color : white;
    background-color: rgb(253, 132, 70);
}
.EmotionItem_on_5{
    color : white;
    background-color: rgb(253, 86, 95);
}

---
index.css

@font-face {
    font-family : "NanumPenScript";
    src: url("NanumPenScript-Regular.ttf");
}
html, body {
    margin : 0px;
    width : 100%;
    background-color: rgb(246, 246, 246);
    display: flex;
}

#root {
    background-color: white;
    /* 최대 넓이 600px */
    max-width: 600px;
    width: 100%;
    /* 가운데 설정 */
    margin : 0 auto;
    /* 최소높이 설정 Vue Port Height*/
    min-height: 100vh;
    height: 100%;
    box-shadow: rgba(100, 100, 100, 0.2) 0px 0px 29px 0px;
    /* 내부여백 설정  */
    padding : 0px 20px;
}

body * {
    font-family: "NanumPenScript";
}