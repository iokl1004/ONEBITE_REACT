84. 12.6) 폰트, 이미지, 레이아웃 설정하기

public 폴더에 폰트파일 넣기
이모션 이미지 파일을을 assets 폴더에 넣기!

index.css 수정

비트가 내부적으로 진행하는 이미지 최적화 때문에 이모션 이미지는 assets폴더에, 폰트 파일을 public 폴더에 넣었다!

소수의 이미지 같은 경우에는 src/assets 폴더에 적용을 하고, 다수의 이미지 같은 경우에는 public 모드에 적용을 하는것이 좋다!

이미지를 불러오는 별도의 js파일로 빼내기 위해
src/util/get-emotion-image 파일에 복사!src/util 폴더 생성 후, get-emtion-image.js 파일 생성!


App.jsx 수정
index.css 수정
src/util/get-emotion-image 파일 추가
---
App.jsx

import './App.css'
// useNavigate : 페이지를 실제로 이동 시켜주는 네비게이트함수를 반환해줌
import { Routes, Route, Link, useNavigate } from "react-router-dom";
import Home from './pages/Home'
import Diary from './pages/Diary'
import New from './pages/New'
import Notfound from './pages/Notfound';

// 소수의 이미지 같은 경우에는 src/assets 폴더에 적용을 하고, 다수의 이미지 같은 경우에는 public 모드에 적용을 하는것이 좋다!
// src/assets 폴더 적용
// 이미지를 불러오는 별도의 js파일로 빼내기 위해 src/util/get-emotion-image 파일에 복사!
// import emotion1 from './assets/emotion1.png';
// import emotion2 from './assets/emotion2.png';
// import emotion3 from './assets/emotion3.png';
// import emotion4 from './assets/emotion4.png';
// import emotion5 from './assets/emotion5.png';
import { getEmotionImage } from './util/get-emotion-image.js';

// 1. "/" : 모든 일기를 조회하는 Home 페이지
// 2. "/new" : 새로운 일기를 작성하는 new 페이지
// 3. "/diary" : 일기를 상세히 조회하는 Diary 페이지
function App() {
  const nav = useNavigate();

  // new 페이지로 이동을 한다!
  const onClickButton = () => {
    nav("/new");
  }

  return (
    <>
      {/* public 폴더에 해당 이미지를 넣고 이렇게 가동해도됨! 허나, 비트가 내부적으로 진행하는 이미지 최적화는 진행되지 않음. */}
      {/* <div>
        <img src={"/emotion1.png"} />
        <img src={"/emotion2.png"} />
        <img src={"/emotion3.png"} />
        <img src={"/emotion4.png"} />
        <img src={"/emotion5.png"} />
      </div> */}
      <div>
        <img src={getEmotionImage(1)} />
        <img src={getEmotionImage(2)} />
        <img src={getEmotionImage(3)} />
        <img src={getEmotionImage(4)} />
        <img src={getEmotionImage(5)} />
      </div>
      <div>
        {/* 링크방식 */}
        <Link to={"/"}>Home</Link>
        <Link to={"/new"}>New</Link>
        <Link to={"/diary"}>Diary</Link>

        {/* 버튼 방식 */}
        <button onClick={onClickButton}>New 페이지로 이동</button>

        {/* 기존 HTML 태그 방식         */}
        {/* <a href="/">Home</a>
        <a href="/new">New</a>
        <a href="/diary">Diary</a> */}
      </div>
      {/* Routes 컴포넌트 안에는 라우트만 들어갈수 있음! */}
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/new" element={<New />} />
        {/* 1. URL Parameter 방식 : id는 URL 파라미터 값이다! */}
        <Route path="/diary/:id" element={<Diary />} />

        {/* 위의 있는 경로가 아니라면 낫파운드 화면출력! */}
        <Route path="*" element={<Notfound />} />
        
      </Routes>
    </>
  )
}

export default App;

---
index.css

@font-face {
    font-family : "NanumPenScript";
    src: url("NanumPenScript-Regular.ttf");
}
html, body {
    margin : 0px;
    width : 100%;
    background-color: rgb(246, 246, 246);
}

#root {
    background-color: white;
    /* 최대 넓이 600px */
    max-width: 600px;
    width: 100%;
    /* 가운데 설정 */
    margin : 0 auto;
    /* 최소높이 설정 Vue Port Height*/
    min-height: 100vh;
    height: 100%;
    box-shadow: rgba(100, 100, 100, 0.2) 0px 0px 29px 0px;
}

body * {
    font-family: "NanumPenScript";
}
---
src/util/get-emotion-image

import emotion1 from './../assets/emotion1.png';
import emotion2 from './../assets/emotion2.png';
import emotion3 from './../assets/emotion3.png';
import emotion4 from './../assets/emotion4.png';
import emotion5 from './../assets/emotion5.png';

export function getEmotionImage (emotionId) {
    switch(emotionId) {
        case 1:
            return emotion1;
        case 2:
            return emotion2;
        case 3:
            return emotion3;
        case 4:
            return emotion4;
        case 5:
            return emotion5;
        default :
            return null;
    }
}